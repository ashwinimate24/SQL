select * from pubs;
select * from beverages;
select * from sales;
select * from ratings;
------------------------------------------------------------------------------------------------------------
#Questions
----------------------------------------------------------------------------------
#1. How many pubs are located in each country??

select country,count(p.pub_id) Number_of_Pub
from pubs p
join sales s 
on p.pub_id = s.pub_id 
group by country;

select p.*,s.*
from pubs p
join sales s 
on p.pub_id = s.pub_id;
-------------------------------------------------------------------------------------------------
#2. What is the total sales amount for each pub, including the beverage price and quantity sold?

select pub_name,sum(quantity*price_per_unit) as total_price
from pubs p
join sales s on p.pub_id = s.pub_id
join beverages b on b.beverage_id = s.beverage_id
group by pub_name;

select p.*,s.*,b.*
from pubs p
join sales s on p.pub_id = s.pub_id
join beverages b on b.beverage_id = s.beverage_id;
---------------------------------------------------------------------------------
#3. Which pub has the highest average rating?

select pub_name, avg(rating) as avg_rating
from pubs p
join ratings r
on p.pub_id = r.pub_id
group by pub_name
order by avg_rating desc
LIMIT 1;
---------------------------------------------------------------------------------
#4. What are the top 5 beverages by sales quantity across all pubs?

SELECT beverage_name,sum(quantity) as sale_quantity
from beverages b
join sales s
on b.beverage_id = s.beverage_id
group by beverage_name
order by sale_quantity desc
LIMIT 5;
------------------------------------------------------------------------------------
#5. How many sales transactions occurred on each date?

select transaction_date,count(sale_id) as Number_of_transaction
from sales
group by  transaction_date;
-------------------------------------------------------------------------------------
#6. Find the name of someone that had cocktails and which pub they had it in.

select customer_name,category,pub_name
from sales s
inner join  beverages b on s.beverage_id = b.beverage_id
inner join ratings r on r.pub_id = s.pub_id
inner join pubs p on p.pub_id = s.pub_id
where category = 'Cocktail';
-----------------------------------------------------------------------------------------
#7. What is the average price per unit for each category of beverages, excluding the category 'Spirit'?

select category,avg(price_per_unit) as Avg_Price
from beverages b
inner join sales s 
on b.beverage_id = s.beverage_id
where category not in ('Spirit')
group by  category;
---------------------------------------------------------------------------------------------------------------
#8. Which pubs have a rating higher than the average rating of all pubs?

with cte as
( select p.pub_id,p.pub_name,r.rating,avg(rating) over()
as avg_rating from pubs p 
inner join ratings r 
on p.pub_id = r.pub_id)
select * from cte 
where rating > avg_rating;
----------------------------------------------------------------------------------------------------------------
select r.*,avg(rating) over(order by rating) from ratings r;
select *
from pubs p 
inner join ratings r on p.pub_id = r.pub_id
where rating > (select r.pub_id,avg(rating) as rating
from ratings
group by r.pub_id);

with cte as(
select pub_id,avg(rating) 
from ratings
group by pub_id)
select *
from pubs p 
inner join cte c on p.pub_id = c.pub_id
;
------------------------------------------------------------------------------------------------------------
#9. What is the running total of sales amount for each pub, ordered by the transaction date?

SELECT
    s.pub_id,
    p.pub_name,
    s.transaction_date,
    s.quantity,
    b.price_per_unit * s.quantity AS sales_amount,
    SUM(b.price_per_unit * s.quantity) OVER (PARTITION BY s.pub_id ORDER BY s.transaction_date) AS running_total
FROM
    sales s
INNER JOIN
    pubs p ON s.pub_id = p.pub_id
INNER JOIN
    beverages b ON s.beverage_id = b.beverage_id
ORDER BY
    s.pub_id, s.transaction_date;
---------------------------------------------------------------------------------------------------------------
select s.*,b.*
from sales s 
inner join beverages b
on b.beverage_id = s.beverage_id; 
use db;
/*10. For each country, what is the average price per unit of beverages in each category, and what is the overall 
average price per unit of beverages across all categories?*/

/*11. For each pub, what is the percentage contribution of each category of beverages to the total sales amount,
 and what is the pub's overall sales amount?*/

CREATE TABLE pubs (
pub_id INT PRIMARY KEY,
pub_name VARCHAR(50),
city VARCHAR(50),
state VARCHAR(50),
country VARCHAR(50)
);
use db;
--------------------
-- Create the 'beverages' table
CREATE TABLE beverages (
beverage_id INT PRIMARY KEY,
beverage_name VARCHAR(50),
category VARCHAR(50),
alcohol_content FLOAT,
price_per_unit DECIMAL(8, 2)
);
--------------------
-- Create the 'sales' table

CREATE TABLE sales (
sale_id INT PRIMARY KEY,
pub_id INT,
beverage_id INT,
quantity INT,
transaction_date DATE,
FOREIGN KEY (pub_id) REFERENCES pubs(pub_id),
FOREIGN KEY (beverage_id) REFERENCES beverages(beverage_id)
);
--------------------
drop table ratings;
 CREATE TABLE ratings ( rating_id INT PRIMARY KEY, pub_id INT, 
customer_name VARCHAR(50), rating FLOAT, review TEXT, FOREIGN KEY (pub_id) REFERENCES pubs(pub_id) );
--------------------
-- Insert sample data into the 'pubs' table
INSERT INTO pubs (pub_id, pub_name, city, state, country)
VALUES
(1, 'The Red Lion', 'London', 'England', 'United Kingdom'),
(2, 'The Dubliner', 'Dublin', 'Dublin', 'Ireland'),
(3, 'The Cheers Bar', 'Boston', 'Massachusetts', 'United States'),
(4, 'La Cerveceria', 'Barcelona', 'Catalonia', 'Spain');
--------------------
-- Insert sample data into the 'beverages' table
INSERT INTO beverages (beverage_id, beverage_name, category, alcohol_content, price_per_unit)
VALUES
(1, 'Guinness', 'Beer', 4.2, 5.99),
(2, 'Jameson', 'Whiskey', 40.0, 29.99),
(3, 'Mojito', 'Cocktail', 12.0, 8.99),
(4, 'Chardonnay', 'Wine', 13.5, 12.99),
(5, 'IPA', 'Beer', 6.8, 4.99),
(6, 'Tequila', 'Spirit', 38.0, 24.99);
--------------------
INSERT INTO sales (sale_id, pub_id, beverage_id, quantity, transaction_date)
VALUES
(1, 1, 1, 10, '2023-05-01'),
(2, 1, 2, 5, '2023-05-01'),
(3, 2, 1, 8, '2023-05-01'),
(4, 3, 3, 12, '2023-05-02'),
(5, 4, 4, 3, '2023-05-02'),
(6, 4, 6, 6, '2023-05-03'),
(7, 2, 3, 6, '2023-05-03'),
(8, 3, 1, 15, '2023-05-03'),
(9, 3, 4, 7, '2023-05-03'),
(10, 4, 1, 10, '2023-05-04'),
(11, 1, 3, 5, '2023-05-06'),
(12, 2, 2, 3, '2023-05-09'),
(13, 2, 5, 9, '2023-05-09'),
(14, 3, 6, 4, '2023-05-09'),
(15, 4, 3, 7, '2023-05-09'),
(16, 4, 4, 2, '2023-05-09'),
(17, 1, 4, 6, '2023-05-11'),
(18, 1, 6, 8, '2023-05-11'),
(19, 2, 1, 12, '2023-05-12'),
(20, 3, 5, 5, '2023-05-13');
--------------------
-- Insert sample data into the 'ratings' table
INSERT INTO ratings (rating_id, pub_id, customer_name, rating, review)
VALUES
(1, 1, 'John Smith', 4.5, 'Great pub with a wide selection of beers.'),
(2, 1, 'Emma Johnson', 4.8, 'Excellent service and cozy atmosphere.'),
(3, 2, 'Michael Brown', 4.2, 'Authentic atmosphere and great beers.'),
(4, 3, 'Sophia Davis', 4.6, 'The cocktails were amazing! Will definitely come back.'),
(5, 4, 'Oliver Wilson', 4.9, 'The wine selection here is outstanding.'),
(6, 4, 'Isabella Moore', 4.3, 'Had a great time trying different spirits.'),
(7, 1, 'Sophia Davis', 4.7, 'Loved the pub food! Great ambiance.'),
(8, 2, 'Ethan Johnson', 4.5, 'A good place to hang out with friends.'),
(9, 2, 'Olivia Taylor', 4.1, 'The whiskey tasting experience was fantastic.'),
(10, 3, 'William Miller', 4.4, 'Friendly staff and live music on weekends.');
--------------------
